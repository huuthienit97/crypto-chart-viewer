{"ast":null,"code":"var _jsxFileName = \"/Volumes/Extreme SSD/NodeJs/huuthien.vn/huuthien-realtime-crypto/client/src/components/TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  padding: 20px;\n  height: 400px;\n`;\n_c = Container;\nconst Title = styled.h3`\n  margin-bottom: 15px;\n  color: #a0aec0;\n  font-size: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = Title;\nconst TimeFrameButtons = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n_c3 = TimeFrameButtons;\nconst TimeButton = styled.button`\n  padding: 5px 10px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  background: ${props => props.active ? 'rgba(102, 126, 234, 0.3)' : 'transparent'};\n  color: white;\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(102, 126, 234, 0.2);\n  }\n`;\n_c4 = TimeButton;\nconst ChartContainer = styled.div`\n  height: 300px;\n  width: 100%;\n`;\n_c5 = ChartContainer;\nconst TradingChart = ({\n  selectedCrypto,\n  cryptoData\n}) => {\n  _s();\n  var _cryptoData$selectedC3;\n  const [timeFrame, setTimeFrame] = useState('1H');\n  const [chartData, setChartData] = useState([]);\n  const [lastPrice, setLastPrice] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(0);\n  const [isRealtime, setIsRealtime] = useState(true);\n\n  // Hàm làm mượt giá để tránh nhảy dữ\n  const smoothPrice = (newPrice, lastPrice) => {\n    if (!lastPrice) return newPrice;\n\n    // Chỉ cập nhật nếu thay đổi > 0.1%\n    const changePercent = Math.abs((newPrice - lastPrice) / lastPrice) * 100;\n    if (changePercent < 0.1) {\n      return lastPrice;\n    }\n\n    // Smoothing với weighted average\n    return lastPrice * 0.7 + newPrice * 0.3;\n  };\n\n  // Tạo dữ liệu biểu đồ từ giá thật\n  useEffect(() => {\n    var _cryptoData$selectedC, _cryptoData$selectedC2;\n    const currentPrice = (_cryptoData$selectedC = cryptoData[selectedCrypto]) === null || _cryptoData$selectedC === void 0 ? void 0 : _cryptoData$selectedC.price;\n    if (!currentPrice) return;\n    const now = Date.now();\n\n    // Debounce: chỉ cập nhật mỗi 2 giây\n    if (now - lastUpdate < 2000) return;\n    setLastUpdate(now);\n\n    // Làm mượt giá\n    const smoothedPrice = smoothPrice(currentPrice, lastPrice);\n    setLastPrice(smoothedPrice);\n    const newDataPoint = {\n      time: new Date().toLocaleTimeString('vi-VN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      }),\n      price: parseFloat(smoothedPrice.toFixed(2)),\n      volume: ((_cryptoData$selectedC2 = cryptoData[selectedCrypto]) === null || _cryptoData$selectedC2 === void 0 ? void 0 : _cryptoData$selectedC2.volume) || 0\n    };\n    setChartData(prevData => {\n      const updatedData = [...prevData, newDataPoint];\n\n      // Giữ tối đa 100 điểm dữ liệu\n      if (updatedData.length > 100) {\n        return updatedData.slice(-100);\n      }\n      return updatedData;\n    });\n  }, [(_cryptoData$selectedC3 = cryptoData[selectedCrypto]) === null || _cryptoData$selectedC3 === void 0 ? void 0 : _cryptoData$selectedC3.price, selectedCrypto, lastPrice, lastUpdate]);\n\n  // Khởi tạo dữ liệu ban đầu\n  useEffect(() => {\n    var _cryptoData$selectedC4;\n    const currentPrice = (_cryptoData$selectedC4 = cryptoData[selectedCrypto]) === null || _cryptoData$selectedC4 === void 0 ? void 0 : _cryptoData$selectedC4.price;\n    if (!currentPrice) return;\n    const data = [];\n    const now = new Date();\n\n    // Tạo 50 điểm dữ liệu ban đầu với giá hiện tại\n    for (let i = 50; i >= 0; i--) {\n      var _cryptoData$selectedC5;\n      const time = new Date(now.getTime() - i * 60000); // Mỗi phút\n      data.push({\n        time: time.toLocaleTimeString('vi-VN', {\n          hour: '2-digit',\n          minute: '2-digit'\n        }),\n        price: parseFloat(currentPrice.toFixed(2)),\n        volume: ((_cryptoData$selectedC5 = cryptoData[selectedCrypto]) === null || _cryptoData$selectedC5 === void 0 ? void 0 : _cryptoData$selectedC5.volume) || 0\n      });\n    }\n    setChartData(data);\n  }, [selectedCrypto]);\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '6px',\n          padding: '10px',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Thời gian: ${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#00ff88'\n          },\n          children: `Giá: $${payload[0].value.toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#a0aec0'\n          },\n          children: `Volume: ${payload[0].payload.volume.toFixed(0)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"\\uD83D\\uDCC8 Bi\\u1EC3u \\u0111\\u1ED3 gi\\xE1 - \", selectedCrypto, /*#__PURE__*/_jsxDEV(TimeFrameButtons, {\n        children: ['1H', '4H', '1D', '1W'].map(tf => /*#__PURE__*/_jsxDEV(TimeButton, {\n          active: timeFrame === tf,\n          onClick: () => setTimeFrame(tf),\n          children: tf\n        }, tf, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"rgba(255, 255, 255, 0.1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\",\n            stroke: \"#a0aec0\",\n            fontSize: 12,\n            tick: {\n              fill: '#a0aec0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#a0aec0\",\n            fontSize: 12,\n            tick: {\n              fill: '#a0aec0'\n            },\n            domain: ['dataMin - 100', 'dataMax + 100']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#00ff88\",\n            strokeWidth: 2,\n            dot: false,\n            activeDot: {\n              r: 4,\n              fill: '#00ff88'\n            },\n            connectNulls: true,\n            isAnimationActive: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"jK6RGQAWAj22FuqGMjHMOfAfWSk=\");\n_c6 = TradingChart;\nexport default TradingChart;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TimeFrameButtons\");\n$RefreshReg$(_c4, \"TimeButton\");\n$RefreshReg$(_c5, \"ChartContainer\");\n$RefreshReg$(_c6, \"TradingChart\");","map":{"version":3,"names":["React","useState","useEffect","styled","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Container","div","_c","Title","h3","_c2","TimeFrameButtons","_c3","TimeButton","button","props","active","_c4","ChartContainer","_c5","TradingChart","selectedCrypto","cryptoData","_s","_cryptoData$selectedC3","timeFrame","setTimeFrame","chartData","setChartData","lastPrice","setLastPrice","lastUpdate","setLastUpdate","isRealtime","setIsRealtime","smoothPrice","newPrice","changePercent","Math","abs","_cryptoData$selectedC","_cryptoData$selectedC2","currentPrice","price","now","Date","smoothedPrice","newDataPoint","time","toLocaleTimeString","hour","minute","second","parseFloat","toFixed","volume","prevData","updatedData","length","slice","_cryptoData$selectedC4","data","i","_cryptoData$selectedC5","getTime","push","CustomTooltip","payload","label","style","backgroundColor","border","borderRadius","padding","color","children","fileName","_jsxFileName","lineNumber","columnNumber","value","toLocaleString","map","tf","onClick","width","height","strokeDasharray","stroke","dataKey","fontSize","tick","fill","domain","content","type","strokeWidth","dot","activeDot","r","connectNulls","isAnimationActive","_c6","$RefreshReg$"],"sources":["/Volumes/Extreme SSD/NodeJs/huuthien.vn/huuthien-realtime-crypto/client/src/components/TradingChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst Container = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  padding: 20px;\n  height: 400px;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 15px;\n  color: #a0aec0;\n  font-size: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TimeFrameButtons = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nconst TimeButton = styled.button`\n  padding: 5px 10px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  background: ${props => props.active ? 'rgba(102, 126, 234, 0.3)' : 'transparent'};\n  color: white;\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(102, 126, 234, 0.2);\n  }\n`;\n\nconst ChartContainer = styled.div`\n  height: 300px;\n  width: 100%;\n`;\n\nconst TradingChart = ({ selectedCrypto, cryptoData }) => {\n  const [timeFrame, setTimeFrame] = useState('1H');\n  const [chartData, setChartData] = useState([]);\n  const [lastPrice, setLastPrice] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(0);\n  const [isRealtime, setIsRealtime] = useState(true);\n\n  // Hàm làm mượt giá để tránh nhảy dữ\n  const smoothPrice = (newPrice, lastPrice) => {\n    if (!lastPrice) return newPrice;\n    \n    // Chỉ cập nhật nếu thay đổi > 0.1%\n    const changePercent = Math.abs((newPrice - lastPrice) / lastPrice) * 100;\n    if (changePercent < 0.1) {\n      return lastPrice;\n    }\n    \n    // Smoothing với weighted average\n    return lastPrice * 0.7 + newPrice * 0.3;\n  };\n\n  // Tạo dữ liệu biểu đồ từ giá thật\n  useEffect(() => {\n    const currentPrice = cryptoData[selectedCrypto]?.price;\n    if (!currentPrice) return;\n\n    const now = Date.now();\n    \n    // Debounce: chỉ cập nhật mỗi 2 giây\n    if (now - lastUpdate < 2000) return;\n    setLastUpdate(now);\n\n    // Làm mượt giá\n    const smoothedPrice = smoothPrice(currentPrice, lastPrice);\n    setLastPrice(smoothedPrice);\n\n    const newDataPoint = {\n      time: new Date().toLocaleTimeString('vi-VN', { \n        hour: '2-digit', \n        minute: '2-digit',\n        second: '2-digit'\n      }),\n      price: parseFloat(smoothedPrice.toFixed(2)),\n      volume: cryptoData[selectedCrypto]?.volume || 0\n    };\n\n    setChartData(prevData => {\n      const updatedData = [...prevData, newDataPoint];\n      \n      // Giữ tối đa 100 điểm dữ liệu\n      if (updatedData.length > 100) {\n        return updatedData.slice(-100);\n      }\n      \n      return updatedData;\n    });\n  }, [cryptoData[selectedCrypto]?.price, selectedCrypto, lastPrice, lastUpdate]);\n\n  // Khởi tạo dữ liệu ban đầu\n  useEffect(() => {\n    const currentPrice = cryptoData[selectedCrypto]?.price;\n    if (!currentPrice) return;\n\n    const data = [];\n    const now = new Date();\n    \n    // Tạo 50 điểm dữ liệu ban đầu với giá hiện tại\n    for (let i = 50; i >= 0; i--) {\n      const time = new Date(now.getTime() - i * 60000); // Mỗi phút\n      data.push({\n        time: time.toLocaleTimeString('vi-VN', { \n          hour: '2-digit', \n          minute: '2-digit' \n        }),\n        price: parseFloat(currentPrice.toFixed(2)),\n        volume: cryptoData[selectedCrypto]?.volume || 0\n      });\n    }\n    \n    setChartData(data);\n  }, [selectedCrypto]);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div style={{\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '6px',\n          padding: '10px',\n          color: 'white'\n        }}>\n          <p>{`Thời gian: ${label}`}</p>\n          <p style={{ color: '#00ff88' }}>{`Giá: $${payload[0].value.toLocaleString()}`}</p>\n          <p style={{ color: '#a0aec0' }}>{`Volume: ${payload[0].payload.volume.toFixed(0)}`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Container>\n      <Title>\n        📈 Biểu đồ giá - {selectedCrypto}\n        <TimeFrameButtons>\n          {['1H', '4H', '1D', '1W'].map(tf => (\n            <TimeButton\n              key={tf}\n              active={timeFrame === tf}\n              onClick={() => setTimeFrame(tf)}\n            >\n              {tf}\n            </TimeButton>\n          ))}\n        </TimeFrameButtons>\n      </Title>\n      \n      <ChartContainer>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255, 255, 255, 0.1)\" />\n            <XAxis \n              dataKey=\"time\" \n              stroke=\"#a0aec0\"\n              fontSize={12}\n              tick={{ fill: '#a0aec0' }}\n            />\n            <YAxis \n              stroke=\"#a0aec0\"\n              fontSize={12}\n              tick={{ fill: '#a0aec0' }}\n              domain={['dataMin - 100', 'dataMax + 100']}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Line \n              type=\"monotone\" \n              dataKey=\"price\" \n              stroke=\"#00ff88\" \n              strokeWidth={2}\n              dot={false}\n              activeDot={{ r: 4, fill: '#00ff88' }}\n              connectNulls={true}\n              isAnimationActive={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n    </Container>\n  );\n};\n\nexport default TradingChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}