{"ast":null,"code":"var _jsxFileName = \"/Volumes/Extreme SSD/NodeJs/huuthien.vn/huuthien-realtime-crypto/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport io from 'socket.io-client';\nimport Header from './components/Header';\nimport CryptoList from './components/CryptoList';\nimport TradingChart from './components/TradingChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n_c = AppContainer;\nconst MainContent = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  gap: 20px;\n  padding: 20px;\n  max-width: 1400px;\n  margin: 0 auto;\n  height: calc(100vh - 80px);\n`;\n_c2 = MainContent;\nconst LeftPanel = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  padding: 20px;\n  overflow-y: auto;\n`;\n_c3 = LeftPanel;\nconst CenterPanel = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  padding: 20px;\n  overflow-y: auto;\n`;\n_c4 = CenterPanel;\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [cryptoData, setCryptoData] = useState({});\n  const [selectedCrypto, setSelectedCrypto] = useState('BTC');\n  useEffect(() => {\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      console.log('Đã kết nối với server');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Đã ngắt kết nối với server');\n      setIsConnected(false);\n    });\n    newSocket.on('cryptoUpdate', data => {\n      setCryptoData(data);\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isConnected: isConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        children: /*#__PURE__*/_jsxDEV(CryptoList, {\n          cryptoData: cryptoData,\n          selectedCrypto: selectedCrypto,\n          onSelectCrypto: setSelectedCrypto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CenterPanel, {\n        children: /*#__PURE__*/_jsxDEV(TradingChart, {\n          selectedCrypto: selectedCrypto,\n          cryptoData: cryptoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nybzmxJHu4891zTmhdHdY+DYAzw=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"LeftPanel\");\n$RefreshReg$(_c4, \"CenterPanel\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","io","Header","CryptoList","TradingChart","jsxDEV","_jsxDEV","AppContainer","div","_c","MainContent","_c2","LeftPanel","_c3","CenterPanel","_c4","App","_s","socket","setSocket","isConnected","setIsConnected","cryptoData","setCryptoData","selectedCrypto","setSelectedCrypto","newSocket","on","console","log","data","close","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCrypto","_c5","$RefreshReg$"],"sources":["/Volumes/Extreme SSD/NodeJs/huuthien.vn/huuthien-realtime-crypto/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport io from 'socket.io-client';\nimport Header from './components/Header';\nimport CryptoList from './components/CryptoList';\nimport TradingChart from './components/TradingChart';\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nconst MainContent = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  gap: 20px;\n  padding: 20px;\n  max-width: 1400px;\n  margin: 0 auto;\n  height: calc(100vh - 80px);\n`;\n\nconst LeftPanel = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  padding: 20px;\n  overflow-y: auto;\n`;\n\nconst CenterPanel = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  padding: 20px;\n  overflow-y: auto;\n`;\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [cryptoData, setCryptoData] = useState({});\n  const [selectedCrypto, setSelectedCrypto] = useState('BTC');\n\n  useEffect(() => {\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      console.log('Đã kết nối với server');\n      setIsConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('Đã ngắt kết nối với server');\n      setIsConnected(false);\n    });\n\n    newSocket.on('cryptoUpdate', (data) => {\n      setCryptoData(data);\n    });\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  return (\n    <AppContainer>\n      <Header isConnected={isConnected} />\n      <MainContent>\n        <LeftPanel>\n          <CryptoList \n            cryptoData={cryptoData} \n            selectedCrypto={selectedCrypto}\n            onSelectCrypto={setSelectedCrypto}\n          />\n        </LeftPanel>\n        \n        <CenterPanel>\n          <TradingChart \n            selectedCrypto={selectedCrypto}\n            cryptoData={cryptoData}\n          />\n        </CenterPanel>\n      </MainContent>\n    </AppContainer>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}